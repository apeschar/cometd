cometd is an Erlang implementation of a comet server. It is released
under the MIT License. See the LICENSE file.

It consists of an HTTP server based on Mochiweb and a simple control
server.

usage
-----

Start the HTTP and control server on the specified ports:

  > cometd:start(HttpPort, ControlPort).

cometd supports live code reloading, like any good erlang program. ;)

Reloading the HTTP server:

  > code:soft_purge(cometd).
  > code:load_file(cometd).

Reloading the Control server:

  > code:soft_purge(msgbrokerserv).
  > code:load_file(msgbrokerserv).

You can start the server from a shell script like this:

  erl -pa ./ebin -noinput -eval 'cometd:start(8080, 6780), receive 0 -> 0 end.'

You could use daemontools or god.rb to run it as a daemon.

http server
-----------

The following paths are available:

  /longpoll/Channel/LastID
    Get one message from Channel, with its message ID higher than LastId.
    After receiving a message, you need to store its ID to use as LastId
    in the next request.
    
    Replies with javascript: _msg(ID, Channel, Data);
    Or after 5s: _msg_timeout();

I will add a Javascript library to this distribution in the near future.

control protocol
----------------

The control protocol is command-oriented and very simple. Simply connect
to your host at ControlPort and send one of these commands. In case of any
errors you will receive a reply like this:

  ERROR: reason

Commands:

  MESSAGE Channel Data
    Post a message containing Data to Channel. Replies with "OK".
  PING
    Keep-alive message. Replies with "PONG".

